
4.1 
Haetaan kaikki matkustajat, jotka ovat yksin vaunussaan

SELECT nimi FROM Matkustajat e
WHERE nimi NOT IN 
(SELECT A.nimi FROM Matkustajat A, Matkustajat 
WHERE A.vaunu_id = B.vaunu_id AND NOT(A.nimi = B.nimi));

4.2 
Haetaan jokaisesta matkustajasta tieto, montako muuta matkustajaa on samassa vaunussa

SELECT A.nimi, (COUNT(*)-1) 
FROM Matkustajat A, Matkustajat B
WHERE A.vaunu_id = B.vaunu_id
GROUP BY A.id;

4.3 
Lasketaan, montako tyhjää paikkaa junassa on

SELECT (SUM(Vaunut.paikat) - (SELECT COUNT(*) FROM Matkustajat))
FROM Vaunut;

4.4 
Haetaan jokaisesta paketista tuotteiden määrä ja eri tuotteiden määrä

SELECT P.nimi, COUNT (S.paketti_id), COUNT(DISTINCT tuote_id)
FROM Paketit P LEFT JOIN Sisallot S ON S.paketti_id = P.id 
GROUP BY P.id;

4.5 
Lasketaan, monellako tavalla voidaan valita kaksi matkustajaa, jotka ovat samassa vaunussa

SELECT COUNT(*) FROM 
(SELECT A.nimi, B.nimi FROM Matkustajat A, Matkustajat B
WHERE NOT(A.nimi = B.nimi) AND A.vaunu_id = B. vaunu_id AND B.id<A.id);

4.6 
Haetaan kaikki vaunut, joissa ei ole yht\ään matkustajaa

SELECT nimi FROM Vaunut  
WHERE id NOT IN
(SELECT vaunu_id FROM Matkustajat);

4.7 
Pelaajat jaetaan joukkueisiin niin, että aakkosjärjestyksessä joka toinen pelaaja kuuluu joukkueeseen "Jänikset" ja "Vuohet". Ilmoita joukkuejako annetuille pelaajille. 

SELECT nimi,  
CASE WHEN ROW_NUMBER() OVER(ORDER BY nimi) % 2 = 0

4.8 
Muodosta tuloslista, jossa on sijaluku, pelaajan nimi ja paras tulos. Jos kahdella pelaajalla on sama tulos, nimet järjestetään aakkosjärjestykseen. Jokaisella pelaajalla on eri nimi ja
ainakin yksi tulos.

SELECT ROW_NUMBER() OVER(ORDER BY MAX(T.tulos) DESC, P.nimi), P.nimi, MAX(T.tulos)    
FROM Pelaajat P, Tulokset T
WHERE T.pelaaja_id = P.id
GROUP BY P.id ORDER BY MAX(T.tulos) DESC, nimi;
