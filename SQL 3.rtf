
3.1
Lasketaan Sakarin tilin saldon historia

SELECT SUM(B.muutos) FROM Tapahtumat A, Tapahtumat B, Tilit T
WHERE (A.tili_id = T.id AND T.haltija = "Sakari") 
AND B.tili_id = A.tili_id AND B.id BETWEEN 1 AND A.id 
GROUP BY A.id; 

3.2
Lasketaan jokaisen tilin saldo tapahtumien perusteella

SELECT Ti.haltija, SUM(COALESCE(Ta.muutos,0))
FROM Tilit Ti LEFT JOIN Tapahtumat Ta
ON Ta.tili_id = Ti.id
GROUP BY Ti.id; 

3.3 
Lasketaan, mikä on pienin ero kahden tuotteen hinnassa

SELECT MIN(A.hinta - B.hinta) FROM Tuotteet A, Tuotteet B
WHERE NOT(A.id = B.id) AND A.hinta > B.hinta;

3.4
Lasketaan tulosten mediaani, kun tulosten määrä voi olla pariton tai parillinen. Parillisen tulosmäärän tapauksessa tulostetaan keskikohdan vasemmalla puolella oleva tulos.

SELECT tulos FROM Tulokset 
ORDER BY tulos ASC LIMIT 1 
OFFSET (SELECT CASE WHEN COUNT(*) % 2 = 0 
THEN ((COUNT(*)/2)-1)
ELSE (COUNT(*)/2) END FROM Tulokset);

3.5
Lasketaan, montako eri tehtävää kukin opiskelija on ratkaissut oikein

SELECT O.nimi, COUNT(DISTINCT L.tehtava_id) 
FROM Opiskelijat O LEFT JOIN Lahetykset L
ON L.opiskelija_id = O.id AND L.tila = 1
GROUP BY O.id;

3.6
Ilmoitetaan jokaisesta junan vaunusta, montako tyhjää paikkaa siellä on

SELECT V.nimi, V.paikat - COUNT(M.vaunu_id)
FROM Vaunut V LEFT JOIN Matkustajat M
ON M.vaunu_id = V.id
GROUP BY V.nimi;

3.7
Ilmoitetaan jokaisesta junan vaunusta, montako matkustajaa siellä on

SELECT V.nimi, COUNT(M.vaunu_id) 
FROM Vaunut V LEFT JOIN Matkustajat M
ON M.vaunu_id = V.id}
GROUP BY V.id;

3.8
Haetaan jokaisesta tuotteesta tieto, monessako paketissa se esiintyy

SELECT T.nimi, COUNT(DISTINCT S.paketti_id) 
FROM Tuotteet T LEFT JOIN Sisallot S 
ON tuote_id =id
GROUP BY T.id;
